apiVersion: flagger.app/v1beta1
kind: Canary
metadata:
  name: sock-shop
  namespace: sock-shop
spec:
  # deployment reference
  targetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: front-end
  # the maximum time in seconds for the canary deployment
  # to make progress before it is rollback (default 600s)
  progressDeadlineSeconds: 60
  # HPA reference (optional)
  # autoscalerRef:
  #   apiVersion: autoscaling/v2beta2
  #   kind: HorizontalPodAutoscaler
  #   name: podinfo
  service:
    # service port number
    port: 80
    # container port number or name (optional)
    targetPort: 8079
    # Istio gateways (optional)
    gateways:
      - sock-shop/sock-shop-gateway
    # Istio virtual service host names (optional)
    hosts:
      - "*"
      # - app.example.com
    # Istio traffic policy (optional)
    trafficPolicy:
      tls:
        # use ISTIO_MUTUAL when mTLS is enabled
        mode: DISABLE
    # Istio retry policy (optional)
    retries:
      attempts: 3
      perTryTimeout: 1s
      retryOn: "gateway-error,connect-failure,refused-stream"
  analysis:
    # schedule interval (default 60s)
    interval: 1m
    # max number of failed metric checks before rollback
    threshold: 5
    # max traffic percentage routed to canary
    # percentage (0-100)
    # maxWeight: 50
    # canary increment step
    # percentage (0-100)
    # stepWeight: 10
    # You can use the blue/green deployment strategy by replacing stepWeight/maxWeight with iterations in the analysis spec:
    # With this configuration Flagger will run conformance and load tests on the canary pods for ten minutes.
    iterations: 15
    metrics:
      - name: request-success-rate
        # minimum req success rate (non 5xx responses)
        # percentage (0-100)
        thresholdRange:
          min: 99
        interval: 1m
      - name: request-duration
        # maximum req duration P99
        # milliseconds
        thresholdRange:
          max: 1000
        interval: 30s
    # testing (optional)
    webhooks:
      - name: acceptance-test
        type: pre-rollout
        url: http://flagger-loadtester.test/
        timeout: 30s
        metadata:
          type: bash
          cmd: "curl -s http://front-end.sock-shop/"
      - name: user-preparation
        type: pre-rollout
        url: http://jmeter-flagger-loadtester.jmeter/
        timeout: 30s
        metadata:
          type: bash
          cmd: '/bin/bash /load_test /preparation.jmx "34.84.80.98" "100" "180" "900" "6000"'
      - name: load-test
        url: http://jmeter-flagger-loadtester.jmeter/
        timeout: 5s
        metadata:
          # cmd: "hey -z 1m -q 10 -c 2 http://podinfo-canary.test:9898/"
          cmd: '/bin/bash /load_test /scenario.jmx "34.84.80.98" "100" "180" "900" "6000"'
